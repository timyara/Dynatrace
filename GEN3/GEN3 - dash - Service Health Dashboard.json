{"version":14,"variables":[{"key":"K8sNamespace","type":"query","input":"fetch dt.entity.cloud_application_namespace\n| filter matchesPhrase(contains[dt.entity.service], \"SERVICE\")\n| fields entity.name\n| filterOut entity.name == \"dynatrace\"\n| summarize distinctTags = collectDistinct(entity.name)\n| fields distinctTags = arraySort(distinctTags, direction: \"ascending\")","multiple":false,"defaultValue":"blackbox"},{"key":"Service","type":"query","input":"fetch dt.entity.service\n| fields id, Service = entity.name,  dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n| expand dt.entity.cloud_application_namespace\n| filter isNotNull(dt.entity.cloud_application_namespace)\n| fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n| filter in(dt.entity.cloud_application_namespace, $K8sNamespace)\n| sort Service asc\n| filterOut matchesPhrase(Service, \"background threads\") or\n            matchesPhrase(Service, \"Health\")\n| summarize distinctServices = collectDistinct(Service)\n| fields values = arrayRemoveNulls(array(\"ALL\", distinctServices))\n\n","multiple":false,"defaultValue":"ALL"}],"tiles":{"0":{"type":"data","title":"Service Health","query":"timeseries {latency_p50 = median(dt.service.request.response_time),\n           latency_p90 = percentile(dt.service.request.response_time, 90),\n           latency_p99 = percentile(dt.service.request.response_time, 99),\n           requests = sum(dt.service.request.count), \n           errors = sum(dt.service.request.failure_count)},\n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, Service = entity.name,  dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace)\n           | fields id\n           ]\n           } \n           \n| join [timeseries {memory=avg(dt.process.memory.usage),\n                    memory_used = avg(dt.process.memory.working_set_size), \n                    cpu=avg(dt.process.cpu.usage)},\n                    by:{dt.entity.process_group_instance},\n                    filter:k8s.namespace.name == $K8sNamespace\n//| limit 10000                  \n| lookup [fetch dt.entity.process_group_instance \n         | fields id, serviceId=runs[dt.entity.service], \n                  belongs_to], \n                  sourceField:dt.entity.process_group_instance, \n                  lookupField:id\n        | filter isNotNull(lookup.serviceId)\n         | expand lookup.serviceId\n         | dedup lookup.serviceId\n         ],\n         kind: leftOuter,\n         on: {left[dt.entity.service] == right[lookup.serviceId]}             \n\n| fieldsAdd Service = entityName(dt.entity.service), \n            Latency_p50 = arrayAvg(latency_p50),\n            Latency_p90 = arrayAvg(latency_p90),\n            Latency_p99 = arrayAvg(latency_p99),\n            Requests = arraySum(requests), \n            Errors = arraySum(errors),\n            CPU = arrayAvg(right.cpu),\n            Memory = arrayAvg(right.memory),\n            MemoryUsed = arrayAvg(right.memory_used)\n\n| fieldsAdd Availability = 100 - (Errors/Requests) *100\n\n\n| filterOut matchesPhrase(Service, \"background threads\") or\n            matchesPhrase(Service, \"Health\")\n| filter in($Service , \"ALL\") OR in(Service, $Service)   \n\n| fields Service,\n         Status = if(Availability < 98.00 , \"ðŸ”´ \",  else: \"ðŸŸ¢\"),\n         StatusSort = if(Availability < 98.00, 0, else: 1),\n         Availability,\n         Requests,\n         Errors,\n         Latency_p50,\n         Latency_p90,\n         Latency_p99,\n         CPU,\n         MemoryUsed,\n         Memory\n| fieldsRemove StatusSort\n| sort Status asc\n\n/* Help\n\nhttps://docs.dynatrace.com/docs/observe-and-explore/metrics/service-metric-migration","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Availability","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"â‰¥","label":"","value":98},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"â‰¥","label":""},{"id":2,"color":"#AE132D","comparator":"<","label":"","value":98}]}],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"Service","categoryAxisLabel":"Service","valueAxis":"Availability","valueAxisLabel":"Availability"},"hiddenLegendFields":[]},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["SlowRequests"]],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"Availability","rangeAxis":""},{"valueAxis":"Requests","rangeAxis":""},{"valueAxis":"Errors","rangeAxis":""},{"valueAxis":"Latency_p50","rangeAxis":""},{"valueAxis":"Latency_p90","rangeAxis":""},{"valueAxis":"Latency_p99","rangeAxis":""},{"valueAxis":"CPU","rangeAxis":""},{"valueAxis":"MemoryUsed","rangeAxis":""},{"valueAxis":"Memory","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"Service","value":"Status"}},"unitsOverrides":[{"identifier":"Availability","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406692260},{"identifier":"Performance","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406706391},{"identifier":"Latency_p50","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406730982},{"identifier":"CPU","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714885774230},{"identifier":"Memory","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714885790837},{"identifier":"Latency_p90","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1715002954070},{"identifier":"Latency_p99","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1715003431114},{"identifier":"MemoryUsed","unitCategory":"data","baseUnit":"byte","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1715005567682}]}},"1":{"type":"data","title":"Requests","query":"timeseries requests = sum(dt.service.request.count),\n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, Service = entity.name,  dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace)\n           | fields id\n           ]\n           }\n| fieldsAdd service = entityName(dt.entity.service)\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| filterOut matchesPhrase(service, \"background threads\") or\n            matchesPhrase(service, \"Health\")\n| fields  timeframe, \n          interval, \n          service,\n          requests\n| sort requests desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["requests"],"leftAxisDimensions":["service"]},"hiddenLegendFields":["requests"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"service"}},"unitsOverrides":[{"identifier":"Availability","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406692260},{"identifier":"Performance","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406706391},{"identifier":"Latency","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406730982}]}},"2":{"type":"data","title":"Errors","query":"timeseries errors = sum(dt.service.request.failure_count),\n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, \n                    dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace)\n           | fields id\n           ]\n           }\n| fieldsAdd  service = entityName(dt.entity.service)\n| filter in($Service , \"ALL\") OR in(service, $Service) \n| filterOut matchesPhrase(service, \"background threads\") or\n            matchesPhrase(service, \"Health\")\n| fields  timeframe, \n          interval, \n          service,\n          errors","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"barChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["errors"],"leftAxisDimensions":["service"]},"hiddenLegendFields":["requests"],"legend":{"hidden":true},"colorPalette":"log-level"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"service"}},"unitsOverrides":[]}},"3":{"type":"data","title":"Latency_p90","query":"timeseries latency = percentile(dt.service.request.response_time, 90), \n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, \n                    dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace) \n           | fields id\n           ]\n           }\n| fieldsAdd  service = entityName(dt.entity.service)\n| filter in($Service , \"ALL\") OR in(service, $Service) \n| filterOut matchesPhrase(service, \"background threads\") or\n            matchesPhrase(service, \"Health\")\n| fields  timeframe, \n          interval, \n          service,\n          latency\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["latency"],"leftAxisDimensions":["service"]},"hiddenLegendFields":["requests"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"service"}},"unitsOverrides":[{"identifier":"Availability","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406692260},{"identifier":"Performance","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406706391},{"identifier":"Latency","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406730982}]}},"6":{"type":"data","title":"Saturation - CPU Usage %","query":"timeseries cpu = avg(dt.process.cpu.usage), \n           by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n| lookup [fetch dt.entity.process_group_instance \n         | fields id, \n                  serviceId=runs[dt.entity.service], \n                  belongs_to], \n           sourceField:dt.entity.process_group_instance, \n           lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service \n         | fields id, entity.name], \n         sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)   \n| fields timeframe, \n         interval, \n         service = lookup.entity.name, \n         process = entityName(dt.entity.process_group_instance),\n         cpu\n| sort cpu desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["cpu"],"leftAxisDimensions":["service","process"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"process"}}}},"7":{"type":"data","title":"Saturation - Memory Usage %","query":"timeseries usage=avg(dt.process.memory.usage),\n    by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n| lookup [fetch dt.entity.process_group_instance \n         | fields id, serviceId=runs[dt.entity.service], belongs_to], \n         sourceField:dt.entity.process_group_instance, lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service \n         | fields id, entity.name], \n         sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n         service = lookup.entity.name, \n         process = entityName(dt.entity.process_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["service","process"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"process"}}}},"8":{"type":"data","title":"Saturation - Memory Used","query":"timeseries usage=avg(dt.process.memory.working_set_size),\n    by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n| lookup [fetch dt.entity.process_group_instance \n         | fields id, serviceId=runs[dt.entity.service], belongs_to], \n         sourceField:dt.entity.process_group_instance, lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service \n         | fields id, entity.name], \n         sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n         service = lookup.entity.name, \n         process = entityName(dt.entity.process_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["service","process"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"process"}}}},"9":{"type":"data","title":"Latency_p50","query":"timeseries latency = median(dt.service.request.response_time), \n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, \n                    dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace) \n           | fields id\n           ]\n           }\n| fieldsAdd  service = entityName(dt.entity.service)\n| filter in($Service , \"ALL\") OR in(service, $Service) \n| filterOut matchesPhrase(service, \"background threads\") or\n            matchesPhrase(service, \"Health\")\n| fields  timeframe, \n          interval, \n          service,\n          latency\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["latency"],"leftAxisDimensions":["service"]},"hiddenLegendFields":["requests"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"service"}},"unitsOverrides":[{"identifier":"Availability","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406692260},{"identifier":"Performance","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406706391},{"identifier":"Latency","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406730982}]}},"10":{"type":"data","title":"Latency_p99","query":"timeseries latency = percentile(dt.service.request.response_time, 99), \n           by:{dt.entity.service},\n           filter:{\n           dt.entity.service in [\n           fetch dt.entity.service\n           | fields id, \n                    dt.entity.cloud_application_namespace = belongs_to[dt.entity.cloud_application_namespace]\n           | expand dt.entity.cloud_application_namespace\n           | filter isNotNull(dt.entity.cloud_application_namespace)\n           | fieldsAdd dt.entity.cloud_application_namespace = entityName(dt.entity.cloud_application_namespace)\n           | filter in(dt.entity.cloud_application_namespace, $K8sNamespace) \n           | fields id\n           ]\n           }\n| fieldsAdd  service = entityName(dt.entity.service)\n| filter in($Service , \"ALL\") OR in(service, $Service) \n| filterOut matchesPhrase(service, \"background threads\") or\n            matchesPhrase(service, \"Health\")\n| fields  timeframe, \n          interval, \n          service,\n          latency\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["latency"],"leftAxisDimensions":["service"]},"hiddenLegendFields":["requests"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"Service","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"service"}},"unitsOverrides":[{"identifier":"Availability","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406692260},{"identifier":"Performance","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406706391},{"identifier":"Latency","unitCategory":"time","baseUnit":"microsecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1714406730982}]}},"11":{"type":"data","title":"Saturation - Garbage collection suspension time","query":"timeseries usage = avg(dt.runtime.jvm.gc.suspension_time),\n           by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n| append [timeseries usage = avg(dt.runtime.clr.gc.suspension_time),\n           by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n         ]\n| append [timeseries usage = avg(dt.runtime.go.gc.suspension_time),\n           by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n         ]\n| append [timeseries usage = avg(dt.runtime.nodejs.gc.suspension_time),\n           by:{dt.entity.process_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n         ]\n| lookup [fetch dt.entity.process_group_instance \n         | fields id, serviceId=runs[dt.entity.service], belongs_to], \n         sourceField:dt.entity.process_group_instance, lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service \n         | fields id, entity.name], \n         sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n         service = lookup.entity.name, \n         process = entityName(dt.entity.process_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"service","categoryAxisLabel":"service","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["service","process"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"service","value":"process"}}}},"12":{"type":"data","title":"Saturation - Container CPU","query":"timeseries usage=avg(dt.kubernetes.container.cpu_usage),\n    by:{dt.entity.container_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n// | lookup [fetch dt.entity.container_group_instance\n//          | fields id, serviceId=runs[dt.entity.service], belongs_to], \n//          sourceField:dt.entity.container_group_instance, lookupField:id\n// | filter isNotNull(lookup.serviceId)\n// | expand lookup.serviceId\n// | lookup [fetch dt.entity.service \n//          | fields id, entity.name], \n//          sourceField:lookup.serviceId, lookupField:id\n// | filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n//         service = lookup.entity.name, \n         container = entityName(dt.entity.container_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"container","categoryAxisLabel":"container","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["container"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"container","value":"container"}},"unitsOverrides":[{"identifier":"usage","unitCategory":"unspecified","baseUnit":"millicore","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1715487014196}]}},"13":{"type":"data","title":"Saturation - Container Memory Used","query":"timeseries usage=avg(dt.kubernetes.container.memory_working_set),\n    by:{dt.entity.container_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n// | lookup [fetch dt.entity.container_group_instance\n//          | fields id, serviceId=runs[dt.entity.service], belongs_to], \n//          sourceField:dt.entity.container_group_instance, lookupField:id\n// | filter isNotNull(lookup.serviceId)\n// | expand lookup.serviceId\n// | lookup [fetch dt.entity.service \n//          | fields id, entity.name], \n//          sourceField:lookup.serviceId, lookupField:id\n// | filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n//         service = lookup.entity.name, \n         container = entityName(dt.entity.container_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"container","categoryAxisLabel":"container","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["container"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"container","value":"container"}},"unitsOverrides":[]}},"14":{"type":"data","title":"Saturation - Container OOM","query":"timeseries usage=count(dt.kubernetes.container.oom_kills), default:0,nonempty:true,\n    by:{dt.entity.container_group_instance},\n           filter:k8s.namespace.name == $K8sNamespace\n// | lookup [fetch dt.entity.container_group_instance\n//          | fields id, serviceId=runs[dt.entity.service], belongs_to], \n//          sourceField:dt.entity.container_group_instance, lookupField:id\n// | filter isNotNull(lookup.serviceId)\n// | expand lookup.serviceId\n// | lookup [fetch dt.entity.service \n//          | fields id, entity.name], \n//          sourceField:lookup.serviceId, lookupField:id\n// | filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| fields timeframe, \n         interval, \n//         service = lookup.entity.name, \n         container = entityName(dt.entity.container_group_instance),\n         usage\n| sort usage desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"container","categoryAxisLabel":"container","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"],"leftAxisDimensions":["container"]},"hiddenLegendFields":["usage"],"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"dt.entity.process_group_instance.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}]},"honeycomb":{"shape":"square","dataMappings":{"category":"container","value":"container"}},"unitsOverrides":[]}}},"layouts":{"0":{"x":0,"y":0,"w":24,"h":5},"1":{"x":0,"y":5,"w":8,"h":4},"2":{"x":8,"y":5,"w":8,"h":4},"3":{"x":16,"y":9,"w":8,"h":4},"6":{"x":0,"y":9,"w":8,"h":4},"7":{"x":8,"y":9,"w":8,"h":4},"8":{"x":8,"y":13,"w":8,"h":4},"9":{"x":16,"y":5,"w":8,"h":4},"10":{"x":16,"y":13,"w":8,"h":4},"11":{"x":0,"y":13,"w":8,"h":4},"12":{"x":0,"y":17,"w":8,"h":4},"13":{"x":8,"y":17,"w":8,"h":4},"14":{"x":16,"y":17,"w":8,"h":4}},"importedWithCode":false}