{"version":13,"variables":[{"key":"dbType","type":"csv","input":"MS SQL Server, Oracle, PostgreSQL, SAP HanaDB, IBM DB2, MySQL, Snowflake, Cassandra, MongoDB, Elasticsearch, Memcached","multiple":true},{"key":"logLevel","type":"query","input":"fetch logs\n| fields loglevel\n| filterOut loglevel == \"NONE\"\n| sort loglevel asc\n| summarize distinctLoglevels = collectDistinct(loglevel)","multiple":true}],"tiles":{"0":{"type":"data","title":"All Database Types","query":"//OLD\n// fetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_instance` \n// // | append [fetch `dt.entity.sql:db2_instance`]\n// | append [fetch `dt.entity.sql:sql_server_instance`]\n// // | append [fetch `dt.entity.sql:snowflake_account`]\n// // | append [fetch `dt.entity.mysql:instance`]\n// | append [fetch `dt.entity.sql:hana_db_database`]\n// // | append [fetch `dt.entity.mongodb-prometheus:device`]\n// // | append [fetch `dt.entity.elasticsearch:node`]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Cassandra\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Memcached\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n// | fieldsAdd db_type = replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(entity.type, \n//   \"sql:com_dynatrace_extension_sql-oracle_instance\", \"Oracle\"), \n//   \"sql:db2_instance\", \"IBM DB2\"), \n//   \"sql:sql_server_instance\", \"MS SQL Server\"), \n//   \"sql:postgres_instance\", \"PostgreSQL\"), \"mysql:instance\", \"MySQL\"), \n//   \"sql:hana_db_database\", \"SAP HanaDB\"), \n//   \"sql:snowflake_account\", \"Snowflake\"),\n//   \"mongodb-prometheus:device\", \"MongoDB\"),\n//   \"elasticsearch:node\", \"Elasticsearch\"),\n//   \"PROCESS_GROUP_INSTANCE\", coalesce(techType, \"?\"))\n// | filter in(db_type, array($dbType))\n// | summarize distinct_dbs = countDistinct(id), by:db_type \n// | fields db_type, distinct_dbs\n// | sort distinct_dbs desc, db_type\n\n//Oracle Extension\nfetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_database` \n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agentless\", location=\"On Prem\"\n//Oracle DB2\n// | append [fetch `dt.entity.sql:db2_instance`\n// | fieldsAdd id, entity.type, techType = \"Oracle DB2\", agentApproach=\"Agent\", loation=\"On Prem\"]\n//SQL Server instances\n| append [fetch `dt.entity.sql:sql_server_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//HANA Extension\n| append [fetch `dt.entity.sql:hana_db_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"SAP HANA\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//Cassandra\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=entity.name, techType = \"Cassandra\", agentApproach=\"Agent\", location=\"On Prem\"\n  | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n//Azure SQL Server\n| append [fetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"azsqldb\")\n| fieldsAdd id, entity.type,name=entity.name, techType = \" Azure MS SQL Server\", agentApproach=\"Agent\", location=\"Azure\"]\n//Azure Oracle DB\n| append [\nfetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"TATG2\") or matchesPhrase(entity.name, \"tngs\")\n| fieldsAdd id, entity.type, name=entity.name, techType = \"Azure Oracle DB\", agentApproach=\"Agent\", location=\"Azure\"]\n\n\n\n| summarize distinct_dbs = countDistinct(entity.name), by:{techType}\n| fields techType, distinct_dbs","visualization":"donutChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"techType","categoryAxisLabel":"techType","valueAxis":"distinct_dbs","valueAxisLabel":"distinct_dbs","layout":"horizontal"},"legend":{"position":"right","hidden":false},"colorPalette":"blue-steel"},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"error"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["timeframe"],["interval"]],"lineWrapIds":[["sum(`com.dynatrace.extension.sql-oracle.cpu.cores`)"]],"columnWidths":{}},"unitsOverrides":[{"identifier":"com.dynatrace.extension.sql-oracle.cpu.cores","unitCategory":"unspecified","baseUnit":"count","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715511}]}},"1":{"type":"data","title":"Instance List","query":"//OLD\n// fetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`\n// // | append [fetch `dt.entity.sql:db2_instance`]\n// | append [fetch `dt.entity.sql:sql_server_instance`]\n// // | append [fetch `dt.entity.sql:snowflake_account`]\n// // | append [fetch `dt.entity.mysql:instance`]\n// | append [fetch `dt.entity.sql:hana_db_database`]\n// | fieldsAdd db_type=replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(entity.type, \"sql:com_dynatrace_extension_sql-oracle_instance\", \"Oracle\"), \"sql:db2_instance\", \"IBM DB2\"), \"sql:sql_server_instance\", \"MS SQL Server\"), \"sql:postgres_instance\", \"PostgreSQL\"), \"mysql:instance\", \"MySQL\"), \"sql:hana_db_database\", \"SAP HanaDB\")\n// | lookup [\n//     timeseries status_avg = avg(`com.dynatrace.extension.sql-oracle.status`), by:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`, `status`}\n//     | summarize {o = max(arrayLastIndexOf(status_avg, 1))}, by:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`, `status`, timeframe, interval}\n//     | fieldsAdd d = record(t = timeframe[start] + interval * toLong(o), status)\n//     | summarize {d = takeMax(d)}, by:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`}\n//     | fieldsAdd {d[status], alias:status}, {d[t], alias:status_timestamp}\n//   ],\n//   sourceField:id,\n//   lookupField:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`},\n//   prefix:\"oracle.\"\n// | lookup [\n//     timeseries status_avg = avg(`sql-server.databases.state`), by:{`dt.entity.sql:sql_server_instance`, `database.state`}\n//     | summarize {o = max(arrayLastIndexOf(status_avg, 1))}, by:{`dt.entity.sql:sql_server_instance`, `database.state`, timeframe, interval}\n//     | fieldsAdd d = record(t = timeframe[start] + interval * toLong(o), database.state)\n//     | summarize {d = takeMax(d)}, by:{`dt.entity.sql:sql_server_instance`}\n//     | fieldsAdd {d[database.state], alias:status}, {d[t], alias:status_timestamp}\n//   ],\n//   sourceField:id,\n//   lookupField:{`dt.entity.sql:sql_server_instance`},\n//   prefix: \"mssql.\"\n// | lookup [\n//     timeseries status_avg = avg(`db2.db2_status`), by:{`dt.entity.sql:db2_instance`, `db2_status`}\n//     | summarize {o = max(arrayLastIndexOf(status_avg, 1)) }, by:{`dt.entity.sql:db2_instance`, `db2_status`, timeframe, interval}\n//     | fieldsAdd d = record(t = timeframe[start] + interval * toLong(o), db2_status)\n//     | summarize {d = takeMax(d)}, by:{`dt.entity.sql:db2_instance`}\n//     | fieldsAdd {d[db2_status], alias:status}, {d[t], alias:status_timestamp}\n//   ],\n//   sourceField:id,\n//   lookupField:{`dt.entity.sql:db2_instance`},\n//   prefix: \"db2.\"\n// | lookup [\n//     timeseries status_avg = avg(`mysql.global_status.status`), by:{`dt.entity.mysql:instance`, `status`}\n//     | summarize {o = max(arrayLastIndexOf(status_avg, 1)) }, by:{`dt.entity.mysql:instance`, `status`, timeframe, interval}\n//     | fieldsAdd d = record(t = timeframe[start] + interval * toLong(o), status)\n//     | summarize {d = takeMax(d)}, by:{`dt.entity.mysql:instance`}\n//     | fieldsAdd {d[status], alias:status}, {d[t], alias:status_timestamp}\n//   ],\n//   sourceField:id,\n//   lookupField:{`dt.entity.mysql:instance`},\n//   prefix: \"mysql.\"\n// | lookup [\n//     timeseries status_avg = avg(`sap.hana.db.service.status`), by:{`dt.entity.sql:hana_db_database`, `status`}\n//     | summarize {o = max(arrayLastIndexOf(status_avg, 1)) }, by:{`dt.entity.sql:hana_db_database`, `status`, timeframe, interval}\n//     | fieldsAdd d = record(t = timeframe[start] + interval * toLong(o), status)\n//     | summarize {d = takeMax(d)}, by:{`dt.entity.sql:hana_db_database`}\n//     | fieldsAdd {d[status], alias:status}, {d[t], alias:status_timestamp}\n//   ],\n//   sourceField:id,\n//   lookupField:{`dt.entity.sql:hana_db_database`},\n//   prefix: \"hanadb.\"\n// | filter in(db_type, array($dbType))\n// | fields db_type, id, entity.name,\n//   status = coalesce(oracle.status, mssql.status, db2.status, mysql.status, hanadb.status, \"UNKNOWN\"),\n//   status_timestamp = coalesce(oracle.status_timestamp, mssql.status_timestamp, db2.status_timestamp, mysql.status_timestamp, hanadb.status_timestamp)\n\nfetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_instance` \n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)\n//Oracle DB2\n// | append [fetch `dt.entity.sql:db2_instance`\n// | fieldsAdd id, entity.type, techType = \"Oracle DB2\", agentApproach=\"Agent\", loation=\"On Prem\"]\n//SQL Server instances\n| append [fetch `dt.entity.sql:sql_server_instance`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)]\n//HANA Extension\n| append [fetch `dt.entity.sql:hana_db_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"SAP HANA\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)]\n//Cassandra\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=entity.name, techType = \"Cassandra\", agentApproach=\"Agent\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)\n  | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n//What is this?\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, name=\"Memcached\", techType = \"Memcached\", agentApproach=\"Agent\", location=\"On Prem\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n//Azure SQL Server\n| fields name, dbType=techType, agentApproach, location, link\n//| summarize countDistinct(entity.name)\n","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{},"categoricalBarChartSettings":{}},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"error"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["entity.name"]],"columnWidths":{"[\"location\"]":128.091796875,"[\"agentApproach\"]":154.99609375,"[\"dbType\"]":169.994140625,"[\"name\"]":115.998046875}},"unitsOverrides":[{"identifier":"status_avg","unitCategory":"unspecified","baseUnit":"state","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715512},{"identifier":"status_avg","unitCategory":"unspecified","baseUnit":"state","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715512},{"identifier":"status_avg","unitCategory":"unspecified","baseUnit":"state","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715512},{"identifier":"status_avg","unitCategory":"unspecified","baseUnit":"count","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715512}]}},"2":{"type":"data","title":"Agentless Recent Longest Queries","query":"fetch logs, from:now()-6h\n| filter matchesValue(loglevel, \"INFO\")\n| filter ((matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-oracle\") \n    and matchesValue(event.group, \"query_performance\")\n    and isNotNull(elapsed_time))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-server\") \n    and matchesValue(event.group, \"longest_queries\")\n    and isNotNull(total_duration))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.mysql\") \n    and matchesValue(event.group, \"query_performance\")\n    and isNotNull(query_time))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-sap-hana\") \n    and matchesValue(type, \"expensive_statement\")\n    and isNotNull(duration)))\n| fieldsAdd totalTimeElapsed = toDouble(coalesce(elapsed_time, total_duration, query_time, duration, \"0\"))\n| filter totalTimeElapsed > 0\n| fieldsAdd statementID = coalesce(sql_id, query_id, \"UNKNOWN\")\n| fieldsAdd schema = coalesce(schema, db, \"\")\n| fieldsAdd dbType = replaceString(replaceString(replaceString(replaceString(dt.extension.name, \n  \"com.dynatrace.extension.sql-oracle\", \"Oracle DB\"), \n  \"com.dynatrace.extension.sql-server\", \"MS SQL Server\"), \n  \"com.dynatrace.extension.mysql\", \"MySQL\"), \n  \"com.dynatrace.extension.sql-sap-hana\", \"SAP Hana\")\n| filter in(dbType, array($dbType))\n//| filter in(logLevel, array($logLevel))\n| fields dbType, device.name, content, schema, statementID, timestamp, totalTimeInMS=totalTimeElapsed\n| sort totalTimeInMS desc, timestamp desc\n//| limit 10 \n| sort dbType\n| sort dbType desc","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"dbType","categoryAxisLabel":"dbType","valueAxis":"totalTimeInMS","valueAxisLabel":"totalTimeInMS"},"fieldMapping":{"timestamp":"timestamp","leftAxisValues":["totalTimeInMS"],"leftAxisDimensions":["dbType"]}},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"dbType"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["schema"]],"lineWrapIds":[["content"]],"columnWidths":{"[\"content\"]":600,"[\"timestamp\"]":219,"[\"statementID\"]":407,"[\"schema\"]":163.9921875},"sortBy":{"columnId":"[\"dbType\"]","direction":"descending"}}}},"4":{"type":"data","title":"Oracle Tablespace Utilization","query":"timeseries tablespaceUsedRatio = avg(`com.dynatrace.extension.sql-oracle.tablespaces.usedSpaceRatio`),\n  from:now()-6h,\n  by:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`, device, tablespace}\n| filter in(\"Oracle\", array($dbType))\n| filterOut like(tablespace, \"UNDO%\")\n| filterOut like(tablespace, \"MGMT%\")\n| summarize {tsUsed = avg(arrayLast(tablespaceUsedRatio))}, by:{`dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`, device, tablespace}\n| fields device, tablespace, tsUsed\n| sort tsUsed desc\n| limit 20","visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #649438)"},"comparator":"≤","label":"","value":75},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":">","label":"Warning","value":75},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #cd3741)"},"comparator":"≥","label":"Critical","value":95}]}],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"device","categoryAxisLabel":"device","valueAxis":"tsUsed","valueAxisLabel":"tsUsed"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"device"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["tablespaceUsedRatio"]],"columnWidths":{},"enableLineWrap":true},"unitsOverrides":[{"identifier":"tsUsed","unitCategory":"percentage","baseUnit":"percent","displayUnit":"percent","decimals":1,"suffix":"","delimiter":false,"added":1701870954976}]}},"5":{"type":"data","title":"Monitored Instances","query":"//OLD\n// fetch `dt.entity.sql:sql_server_instance`\n// // | append [fetch `dt.entity.sql:db2_database_member`]\n// // | append [fetch `dt.entity.mysql:database`]\n// // | append [fetch `dt.entity.sql:snowflake_account`]\n// | append [fetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_instance`]\n// // | append [fetch `dt.entity.mongodb-prometheus:device`]\n// // | append [fetch `dt.entity.elasticsearch:node`]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Cassandra\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Memcached\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n// | fieldsAdd db_type = replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(entity.type, \n//   \"sql:com_dynatrace_extension_sql-oracle_database\", \"Oracle\"), \n//   \"sql:db2_database_member\", \"IBM DB2\"), \n//   \"sql:sql_server_database\", \"MS SQL Server\"), \n//   \"sql:postgres_database\", \"PostgreSQL\"), \n//   \"mysql:database\", \"MySQL\"), \n//   \"sql:snowflake_account\", \"Snowflake\"),\n//   \"elasticsearch:node\", \"Elasticsearch\"),\n//   \"PROCESS_GROUP_INSTANCE\", coalesce(techType, \"?\"))\n// //| filter in(db_type, array($dbType))\n// //| summarize countDistinct(entity.name)\n\n//Oracle Extension\nfetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_instance` \n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agentless\", location=\"On Prem\"\n//Oracle DB2\n// | append [fetch `dt.entity.sql:db2_instance`\n// | fieldsAdd id, entity.type, techType = \"Oracle DB2\", agentApproach=\"Agent\", loation=\"On Prem\"]\n//SQL Server instances\n| append [fetch `dt.entity.sql:sql_server_instance`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//HANA Extension\n| append [fetch `dt.entity.sql:hana_db_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"SAP HANA\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//Cassandra\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=entity.name, techType = \"Cassandra\", agentApproach=\"Agent\", location=\"On Prem\"\n  | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n//What is this?\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, name=\"Memcached\", techType = \"Memcached\", agentApproach=\"Agent\", location=\"On Prem\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n//Azure SQL Server\n| summarize countDistinct(entity.name)","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"db_type","valueAxisLabel":"distinct_dbs","layout":"horizontal"},"legend":{"position":"right","hidden":false},"colorPalette":"blue-steel"},"singleValue":{"label":"# of servers","prefixIcon":"CheckCircleIcon","autoscale":true,"alignment":"center","showLabel":false,"sparklineSettings":{"isVisible":false},"trend":{"isVisible":false},"recordField":"countDistinct(entity.name)"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["timeframe"],["interval"]],"lineWrapIds":[["sum(`com.dynatrace.extension.sql-oracle.cpu.cores`)"]],"columnWidths":{"[\"entity.name\"]":403.8671875}},"unitsOverrides":[{"identifier":"com.dynatrace.extension.sql-oracle.cpu.cores","unitCategory":"unspecified","baseUnit":"count","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715516}]}},"6":{"type":"markdown","title":"","content":"# Medline Database Monitoring\nAn overview of all monitored DB servers and databases. Use the [DB Services App](https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.databases/ui/databases?gtf=-2h&gf=all&sorting=name%3Basc) for more details.\n- This includes both Agent and *Agentless (Remote/Extension)* Database monitoring data. \n- Variables dbType and logLevel are filtered in only a few of the queries as this is meant for a full overview dashboard. "},"7":{"type":"data","title":"Monitored Databases","query":"//OLD\n// fetch `dt.entity.sql:sql_server_database`\n// // | append [fetch `dt.entity.sql:db2_database_member`]\n// // | append [fetch `dt.entity.mysql:database`]\n// // | append [fetch `dt.entity.sql:snowflake_account`]\n// | append [fetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_database`]\n// // | append [fetch `dt.entity.mongodb-prometheus:device`]\n// // | append [fetch `dt.entity.elasticsearch:node`]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Cassandra\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n// | append [fetch dt.entity.process_group_instance\n//   | fieldsAdd id, entity.type, techType = \"Memcached\"\n//   | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n// | fieldsAdd db_type = replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(entity.type, \n//   \"sql:com_dynatrace_extension_sql-oracle_database\", \"Oracle\"), \n//   \"sql:db2_database_member\", \"IBM DB2\"), \n//   \"sql:sql_server_database\", \"MS SQL Server\"), \n//   \"sql:postgres_database\", \"PostgreSQL\"), \n//   \"mysql:database\", \"MySQL\"), \n//   \"sql:snowflake_account\", \"Snowflake\"),\n//   \"elasticsearch:node\", \"Elasticsearch\"),\n//   \"PROCESS_GROUP_INSTANCE\", coalesce(techType, \"?\"))\n// //| filter in(db_type, array($dbType))\n// //| summarize countDistinct(id)\n\n//Oracle Extension\nfetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_database` \n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agentless\", location=\"On Prem\"\n//Oracle DB2\n// | append [fetch `dt.entity.sql:db2_instance`\n// | fieldsAdd id, entity.type, techType = \"Oracle DB2\", agentApproach=\"Agent\", loation=\"On Prem\"]\n//SQL Server instances\n| append [fetch `dt.entity.sql:sql_server_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//HANA Extension\n| append [fetch `dt.entity.sql:hana_db_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"SAP HANA\", agentApproach=\"Agentless\", location=\"On Prem\"]\n//Cassandra\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=entity.name, techType = \"Cassandra\", agentApproach=\"Agent\", location=\"On Prem\"\n  | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n//What is this?\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=\"Memcached\", techType = \"Memcached\", agentApproach=\"Agent\", location=\"On Prem\"\n  | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n//Azure SQL Server\n| append [fetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"azsqldb\")\n| fieldsAdd id, entity.type,name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agent\", location=\"Azure\"]\n//Azure Oracle DB\n| append [\nfetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"TATG2\") or matchesPhrase(entity.name, \"tngs\")\n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agent\", location=\"Azure\"]\n| summarize countDistinct(entity.name)","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"db_type","valueAxisLabel":"distinct_dbs","layout":"horizontal"},"legend":{"position":"right","hidden":false},"colorPalette":"blue-steel"},"singleValue":{"label":"# of servers","prefixIcon":"DatabaseIcon","autoscale":true,"alignment":"center","showLabel":false,"sparklineSettings":{"isVisible":false},"trend":{"isVisible":false},"recordField":"countDistinct(entity.name)"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["timeframe"],["interval"]],"lineWrapIds":[["sum(`com.dynatrace.extension.sql-oracle.cpu.cores`)"]],"columnWidths":{}},"unitsOverrides":[{"identifier":"com.dynatrace.extension.sql-oracle.cpu.cores","unitCategory":"unspecified","baseUnit":"count","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715517}]}},"8":{"type":"data","title":"Live Problems","query":"fetch events\n| filter dt.system.bucket == \"default_davis_events\"\n| filter event.kind == \"DAVIS_PROBLEM\"\n| filter in(affected_entity_types,\n  {\n    \"dt.entity.sql:com_dynatrace_extension_sql-oracle_instance\",\n    \"dt.entity.sql:db2_instance\",\n    \"dt.entity.sql:sql_server_instance\",\n    \"dt.entity.sql:snowflake_account\",\n    \"dt.entity.sql:postgres_instance\",\n    \"dt.entity.mysql:instance\",\n    \"dt.entity.sql:hana_db_database\",\n    \"dt.entity.sql:db2_database_member\",\n    \"dt.entity.sql:sql_server_database\",\n    \"dt.entity.mysql:database\",\n    \"dt.entity.sql:snowflake_account\",\n    \"dt.entity.sql:com_dynatrace_extension_sql-oracle_database\",\n    \"dt.entity.sql:postgres_database\",\n    \"dt.entity.mongodb-prometheus:device\",\n    \"dt.entity.elasticsearch:node\",\n    \"dt.entity.elasticsearch:cluster\",\n    \"dt.entity.elasticsearch:index\",\n    \"dt.entity.elasticsearch:disk\",\n    \"dt.entity.elasticsearch:thread_pool\"\n  })\n| fieldsAdd db_type = replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(affected_entity_types, \n  \"dt.entity.sql:com_dynatrace_extension_sql-oracle_instance\", \"Oracle\"), \n  \"dt.entity.sql:db2_instance\", \"IBM DB2\"), \n  \"dt.entity.sql:sql_server_instance\", \"MS SQL Server\"), \n  \"dt.entity.sql:snowflake_account\", \"Snowflake\"),\n  \"dt.entity.sql:postgres_instance\", \"PostgreSQL\"), \n  \"dt.entity.mysql:instance\", \"MySQL\"), \n  \"dt.entity.sql:hana_db_database\", \"SAP HanaDB\"),\n  \"dt.entity.sql:db2_database_member\", \"IBM DB2\"), \n  \"dt.entity.sql:sql_server_database\", \"MS SQL Server\"), \n  \"dt.entity.mysql:database\", \"MySQL\"), \n  \"dt.entity.sql:snowflake_account\", \"Snowflake\"),\n  \"dt.entity.sql:com_dynatrace_extension_sql-oracle_database\", \"Oracle\"), \n  \"dt.entity.sql:postgres_database\", \"PostgreSQL\"),\n  \"dt.entity.mongodb-prometheus:device\", \"MongoDB\"),\n  \"dt.entity.elasticsearch:node\", \"Elasticsearch\"),\n  \"dt.entity.elasticsearch:cluster\", \"Elasticsearch\"),\n  \"dt.entity.elasticsearch:index\", \"Elasticsearch\"),\n  \"dt.entity.elasticsearch:disk\", \"Elasticsearch\"),\n  \"dt.entity.elasticsearch:thread_pool\", \"Elasticsearch\")\n| filter in(db_type, array($dbType))\n| sort timestamp\n| summarize { \n  event.status = takeLast(event.status),\n  dt.davis.is_duplicate = takeLast(dt.davis.is_duplicate)\n}, by: {event.id}\n| filter isNull(dt.davis.is_duplicate) OR not(dt.davis.is_duplicate)\n| filter event.status == \"ACTIVE\"\n| summarize problem_count = count()","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #649438)"},"comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #cd3741)"},"comparator":"≥","label":"","value":1}]}],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{}},"singleValue":{"label":"","prefixIcon":"EventIcon","autoscale":true,"alignment":"center","showLabel":false,"trend":{"isVisible":false},"recordField":"problem_count"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"columnWidths":{},"lineWrapIds":[],"enableLineWrap":true},"unitsOverrides":[{"identifier":"dt.host.cpu.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715519},{"identifier":"dt.host.memory.avail.percent","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715519},{"identifier":"dt.host.disk.free","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715519}]}},"9":{"type":"data","title":"ALL - Log ingestion overview","query":"fetch logs\n| filter in(dt.extension.name, {\n  \"com.dynatrace.extension.sql-db2\",\n  \"com.dynatrace.extension.sql-oracle\", \n  \"com.dynatrace.extension.sql-server\", \n  \"com.dynatrace.extension.mysql\",\n  \"com.dynatrace.extension.sql-sap-hana\",\n  \"com.dynatrace.extension.postgres\",\n  \"com.dynatrace.extension.sql-snowflake\",\n  \"com.dynatrace.extension.jmx-cassandra\",\n  \"com.dynatrace.extension.mongodb-mongodb\",\n  \"com.dynatrace.extension.elasticsearch\",\n  \"com.dynatrace.extension.memcached\"}) \n| fieldsAdd dbType = replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(replaceString(dt.extension.name, \n  \"com.dynatrace.extension.sql-oracle\", \"Oracle\"), \n  \"com.dynatrace.extension.sql-server\", \"MS SQL Server\"), \n  \"com.dynatrace.extension.mysql\", \"MySQL\"), \n  \"com.dynatrace.extension.sql-db2\", \"IBM DB2\"), \n  \"com.dynatrace.extension.postgres\", \"PostgreSQL\"), \n  \"com.dynatrace.extension.sql-snowflake\", \"Snowflake\"), \n  \"com.dynatrace.extension.sql-sap-hana\", \"SAP HanaDB\"),\n  \"com.dynatrace.extension.jmx-cassandra\", \"Cassandra\"),\n  \"com.dynatrace.extension.mongodb-mongodb\", \"MongoDB\"),\n  \"com.dynatrace.extension.elasticsearch\", \"Elasticsearch\"),\n  \"com.dynatrace.extension.memcached\", \"Memcached\")\n| filter in(dbType, array($dbType))\n| filter in(loglevel, array($logLevel))\n| makeTimeseries count = count(), by:{dbType, loglevel}, interval:5m","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{},"legend":{"position":"bottom","hidden":false},"categoricalBarChartSettings":{"categoryAxis":"dbType","categoryAxisLabel":"dbType","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["count"],"leftAxisDimensions":["dbType","loglevel"]}},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"dbType"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"columnWidths":{},"lineWrapIds":[]},"unitsOverrides":[{"identifier":"dt.host.cpu.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715521},{"identifier":"dt.host.memory.avail.percent","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715521},{"identifier":"dt.host.disk.free","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715521},{"identifier":"dt.host.disk.used.percent","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707951715521}]}},"10":{"type":"markdown","title":"","content":"# Performance Metrics"},"12":{"type":"data","title":"Database Errors","query":"fetch logs\n//fetch logs, from:now()-5m\n| filter matchesValue(extension, \"sql_mssql\") or matchesValue(extension, \"sql_hanadb\")\n//| filter loglevel  == \"ERROR\"\n//| fields process.technology\n//| filter matchesValue(event.group, \"failed_jobs\")\n//| summarize count(content)\n//| fields job_name, step_name, outcome, content, duration, instance, server, sql_severity, retries_attempted, start_execution_date, stop_execution_date\n//| sort stop_execution_date desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","colorThresholdTarget":"value","recordField":"content"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["device"]],"lineWrapIds":[["content"]],"columnWidths":{}}}},"14":{"type":"data","title":"Agentless SQL Top Queries","query":"fetch logs\n//| filter contains(content,\"select\",caseSensitive:false)\n//| filter matchesValue(device.name, \"MUNTSTMCMPIDB01\")\n| fieldsAdd average_duration = toDouble(avg_duration)\n| filter average_duration > 0\n| fields timestamp, content, average_duration\n| sort average_duration desc\n| summarize total_duration=sum(average_duration), by:{content}\n| sort total_duration desc","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"categoricalBarChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"content","categoryAxisLabel":"content","valueAxis":"total_duration","valueAxisLabel":"total_duration","layout":"horizontal"},"legend":{"hidden":true}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"timestamp","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"columnWidths":{}}}},"17":{"type":"data","title":"Remote: SQL longest_queries - Limit 10","query":"fetch logs\n| filter matchesValue(extension, \"sql_mssql\")\n| filter matchesValue(event.group, \"longest_queries\")\n| fields timestamp, content, device.address, dt.extension.name, avg_duration, device.name\n//| sort avg_duration desc\n| limit 10\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","colorThresholdTarget":"value","recordField":"timestamp"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"columnWidths":{"[\"content\"]":600},"sortBy":{"columnId":"[\"avg_duration\"]","direction":"descending"}}}},"18":{"type":"data","title":"Database List","query":"//Oracle Extension\nfetch `dt.entity.sql:com_dynatrace_extension_sql-oracle_database` \n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)\n//Oracle DB2\n// | append [fetch `dt.entity.sql:db2_instance`\n// | fieldsAdd id, entity.type, techType = \"Oracle DB2\", agentApproach=\"Agent\", loation=\"On Prem\"]\n//SQL Server instances\n| append [fetch `dt.entity.sql:sql_server_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)]\n//HANA Extension\n| append [fetch `dt.entity.sql:hana_db_database`\n| fieldsAdd id, entity.type, name=entity.name, techType = \"SAP HANA\", agentApproach=\"Agentless\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)]\n//Cassandra\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=entity.name, techType = \"Cassandra\", agentApproach=\"Agent\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)\n  | filter iAny(contains(softwareTechnologies[], \"type:APACHE_CASSANDRA,\"))]\n//What is this?\n| append [fetch dt.entity.process_group_instance\n  | fieldsAdd id, entity.type, name=\"Memcached\", techType = \"Memcached\", agentApproach=\"Agent\", location=\"On Prem\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.technologies/ui/entity/\", id)\n  | filter iAny(contains(softwareTechnologies[], \"type:MEMCACHED,\"))]\n//Azure SQL Server\n| append [fetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"azsqldb\")\n| fieldsAdd id, entity.type,name=entity.name, techType = \"MS SQL Server\", agentApproach=\"Agent\", location=\"Azure\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.databases/ui/entity/\", id)]\n//Azure Oracle DB\n| append [\nfetch `dt.entity.service`\n| filter matchesPhrase(entity.name, \"TATG2\") or matchesPhrase(entity.name, \"tngs\")\n| fieldsAdd id, entity.type, name=entity.name, techType = \"Oracle DB\", agentApproach=\"Agent\", location=\"Azure\", link=concat(\"https://sni07209.apps.dynatrace.com/ui/apps/dynatrace.classic.databases/ui/entity/\", id)]\n//| summarize countDistinct(entity.name)\n| fields name, dbType=techType, agentApproach, location, link","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","recordField":"entity.name","autoscale":true,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{"[\"location\"]":131,"[\"name\"]":279.99609375,"[\"dbType\"]":169.994140625,"[\"agentApproach\"]":150.99609375}}}},"19":{"type":"data","title":"Agentless Recent Longest Queries","query":"fetch logs, from:now()-6h\n| filter matchesValue(loglevel, \"INFO\")\n| filter ((matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-oracle\") \n    and matchesValue(event.group, \"query_performance\")\n    and isNotNull(elapsed_time))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-server\") \n    and matchesValue(event.group, \"longest_queries\")\n    and isNotNull(total_duration))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.mysql\") \n    and matchesValue(event.group, \"query_performance\")\n    and isNotNull(query_time))\n  or (matchesValue(dt.extension.name, \"com.dynatrace.extension.sql-sap-hana\") \n    and matchesValue(type, \"expensive_statement\")\n    and isNotNull(duration)))\n| fieldsAdd totalTimeElapsed = toDouble(coalesce(elapsed_time, total_duration, query_time, duration, \"0\"))\n| filter totalTimeElapsed > 0\n| fieldsAdd statementID = coalesce(sql_id, query_id, \"UNKNOWN\")\n| fieldsAdd schema = coalesce(schema, db, \"\")\n| fieldsAdd dbType = replaceString(replaceString(replaceString(replaceString(dt.extension.name, \n  \"com.dynatrace.extension.sql-oracle\", \"Oracle DB\"), \n  \"com.dynatrace.extension.sql-server\", \"MS SQL Server\"), \n  \"com.dynatrace.extension.mysql\", \"MySQL\"), \n  \"com.dynatrace.extension.sql-sap-hana\", \"SAP Hana\")\n\n//| filter in(dbType, array($dbType))\n//| filter in(logLevel, array($logLevel))\n| fields dbType, device.name, content, schema, statementID, timestamp, totalTimeInMS=totalTimeElapsed\n| sort totalTimeInMS desc, timestamp desc\n| limit 10 \n//| limit 20\n| sort dbType\n| sort dbType desc","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"dbType","categoryAxisLabel":"dbType","valueAxis":"totalTimeInMS","valueAxisLabel":"totalTimeInMS"},"fieldMapping":{"timestamp":"timestamp","leftAxisValues":["totalTimeInMS"],"leftAxisDimensions":["dbType"]}},"singleValue":{"label":"","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"dbType"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"columnWidths":{"[\"content\"]":600,"[\"timestamp\"]":219,"[\"statementID\"]":407,"[\"schema\"]":163.9921875},"sortBy":{"columnId":"[\"totalTimeInMS\"]","direction":"unset"}}}}},"layouts":{"0":{"x":12,"y":3,"w":11,"h":6},"1":{"x":0,"y":9,"w":12,"h":6},"2":{"x":0,"y":24,"w":24,"h":9},"4":{"x":0,"y":33,"w":12,"h":7},"5":{"x":4,"y":3,"w":4,"h":6},"6":{"x":0,"y":0,"w":24,"h":3},"7":{"x":8,"y":3,"w":4,"h":6},"8":{"x":0,"y":3,"w":4,"h":6},"9":{"x":0,"y":40,"w":12,"h":7},"10":{"x":0,"y":15,"w":10,"h":1},"12":{"x":12,"y":33,"w":12,"h":7},"14":{"x":0,"y":16,"w":24,"h":8},"17":{"x":0,"y":47,"w":24,"h":9},"18":{"x":12,"y":9,"w":12,"h":6},"19":{"x":0,"y":56,"w":24,"h":7}},"refreshRate":0}