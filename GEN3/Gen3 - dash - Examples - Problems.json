{"version":11,"variables":[{"key":"Status","type":"csv","input":"ALL,OPEN,CLOSED","multiple":false},{"key":"Severity","type":"csv","input":"ALL,MONITORING UNAVAILABLE,AVAILABILITY,ERROR,SLOWDOWN,RESOURCE_CONTENTION,CUSTOM","multiple":false}],"tiles":{"0":{"type":"data","title":"Count by name","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem Type\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n// Summarzation End - Group Probem Events by Problem Type\n\n// Dashboard Fitlers Start\n\n| filter (\"ALL\" == $Status OR $Status == status)\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n\n// Second Summarzation Start - Summarize by Problem Type\n| summarize Total = count(), by:{Type = event.name}\n| sort Total, direction:\"descending\"\n// Second Summarzation Start - Summarize by Problem Type\n\n","visualization":"categoricalBarChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":"","groupingThresholdValue":null},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"","layout":"horizontal","scale":"absolute"},"legend":{"hidden":true},"colorPalette":"categorical"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"1":{"type":"data","title":"Problem list","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// Lookup for affected_entity_ids and root_cause_entity_id Start\n| expand affected_entity_ids\n| expand root_cause_entity_id\n| lookup [fetch dt.entity.service], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.services\"\n| lookup [fetch dt.entity.service], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.services\"\n| lookup [fetch dt.entity.process_group_instance], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.pgi\"\n| lookup [fetch dt.entity.process_group_instance], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.pgi\"\n| lookup [fetch dt.entity.application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.applications\"\n| lookup [fetch dt.entity.application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.applications\"\n| lookup [fetch dt.entity.mobile_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.mobile\"\n| lookup [fetch dt.entity.mobile_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.mobile\"\n| lookup [fetch dt.entity.custom_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.customapplication\"\n| lookup [fetch dt.entity.custom_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.customapplication\"\n| lookup [fetch dt.entity.cloud_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.cloudapplication\"\n| lookup [fetch dt.entity.cloud_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.cloudapplication\"\n| lookup [fetch dt.entity.synthetic_test], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.synthetictest\"\n| lookup [fetch dt.entity.synthetic_test], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.synthetictest\"\n| lookup [fetch dt.entity.http_check], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.httpcheck\"\n| lookup [fetch dt.entity.http_check], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.httpcheck\"\n| lookup [fetch dt.entity.kubernetes_cluster], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.kubernetescluster\"\n| lookup [fetch dt.entity.kubernetes_cluster], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.kubernetescluster\"\n| lookup [fetch dt.entity.host], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.hosts\"\n| lookup [fetch dt.entity.host], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.hosts\"\n| lookup [fetch dt.entity.custom_device], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.customdevices\"\n| lookup [fetch dt.entity.custom_device], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.customdevices\"\n| lookup [fetch dt.entity.hypervisor], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.hypervisor\"\n| lookup [fetch dt.entity.hypervisor], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.hypervisor\"\n| lookup [fetch dt.entity.environment], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.environment\"\n// Lookup for affected_entity_ids and root_cause_entity_id End\n\n// Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            affectedServices = collectDistinct(lookup.affected.entity.servicesentity.name),\n            affectedPGI = collectDistinct(lookup.affected.entity.pgientity.name),\n            affectedApplications = collectDistinct(lookup.affected.entity.applicationsentity.name),\n            affectedMobile = collectDistinct(lookup.affected.entity.mobileentity.name),\n            affectedCustomApplication = collectDistinct(lookup.affected.entity.customapplicationentity.name),\n            affectedCloudApplication = collectDistinct(lookup.affected.entity.cloudapplicationentity.name),\n            affectedSyntheticTest = collectDistinct(lookup.affected.entity.synthetictestentity.name),\n            affectedHttpCheck = collectDistinct(lookup.affected.entity.httpcheckentity.name),\n            affectedKubernetesCluster = collectDistinct(lookup.affected.entity.kubernetesclusterentity.name),\n            affectedHosts = collectDistinct(lookup.affected.entity.hostsentity.name),\n            affectedCustomDevices = collectDistinct(lookup.affected.entity.customdevicesentity.name),\n            affectedHypervisor = collectDistinct(lookup.affected.entity.hypervisorentity.name),\n            affectedEnvironment = collectDistinct(lookup.affected.entity.environmententity.name),\n            rootCauseServices = collectDistinct(lookup.rootcause.entity.servicesentity.name),\n            rootCausePGI = collectDistinct(lookup.rootcause.entity.pgientity.name),\n            rootCauseApplications = collectDistinct(lookup.rootcause.entity.applicationsentity.name),\n            rootCauseMobile = collectDistinct(lookup.rootcause.entity.mobileentity.name),\n            rootCauseCustomApplication = collectDistinct(lookup.rootcause.entity.customapplicationentity.name),\n            rootCauseSyntheticTest = collectDistinct(lookup.rootcause.entity.synthetictestentity.name),\n            rootCauseHttpCheck = collectDistinct(lookup.rootcause.entity.httpcheckentity.name),\n            rootCauseHosts = collectDistinct(lookup.rootcause.entity.hostsentity.name),\n            rootCauseCustomDevices = collectDistinct(lookup.rootcause.entity.customdevicesentity.name),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd currentTime = toTimestamp(now())\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n// Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n\n| filter (\"ALL\" == $Status OR $Status == status)\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n// Final Result Start\n| fields Status = if((status == \"OPEN\"),\"ðŸ”´ OPEN\", \n                  else:if((status == \"CLOSED\"),\"ðŸŸ¢ CLOSED\")),\n         Problem = concat(display_id,\" - \",event.name),         \n         Severity = severityLevel,\n         Type = (event.name),\n         AffectedCount = arraySize(arrayRemoveNulls(arrayConcat(affectedApplications,affectedMobile,affectedCustomApplication,affectedCloudApplication,affectedSyntheticTest,affectedHttpCheck,affectedServices,affectedPGI,affectedKubernetesCluster,affectedHosts,affectedHypervisor,affectedCustomDevices,affectedEnvironment))),\n         Affected = arrayRemoveNulls(arrayConcat(affectedApplications,affectedMobile,affectedCustomApplication,affectedCloudApplication,affectedSyntheticTest,affectedHttpCheck,affectedServices,affectedPGI,affectedKubernetesCluster,affectedHosts,affectedHypervisor,affectedCustomDevices,affectedEnvironment)),\n         RootCause = arrayRemoveNulls(arrayConcat(rootCauseServices,rootCauseHosts)),\n         StartTime = startTime,\n         EndTime =  if((status == \"OPEN\"),\"In Progress\", \n                    else:if((status == \"CLOSED\"),endTime)),   \n      //   Duration = if((status == \"CLOSED\"),problemClosedDuration,\n      //              else:if((status == \"OPEN\"), currentTime-startTime)),\n\n         `Duration (min)` = if((status == \"CLOSED\"),problemClosedDuration/60000000000,\n                   else:if((status == \"OPEN\"), toLong(currentTime-startTime)/60000000000)),\n      \n         \n         event.id           \n| sort StartTime, direction:\"descending\"\n| sort Status, direction:\"ascending\"\n// Final Result End\n\n","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["AffectedCount"],["Type"],["Severity"]],"lineWrapIds":[["Affected"]],"columnWidths":{}}}},"2":{"type":"data","title":"Count by severity level","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Status OR $Status == status) \n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)// Dashboard Fitlers End\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize by Severity Level\n| summarize Total = count(), by:{Severity = severityLevel}\n| sort Total, direction:\"descending\"\n// Second Summarzation End - Summarize by Severity Level","visualization":"categoricalBarChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoricalBarChartSettings":{"categoryAxis":"Severity","categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"","layout":"horizontal"},"legend":{"hidden":true},"colorPalette":"fireplace"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"3":{"type":"data","title":"Problem History","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Problem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n| fieldsAdd currentTime = toTimestamp(now())-1m                \n// First Summarzation Emd - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Status OR $Status == status) \n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n              \n// Second Summarzation Start - Summarize Closed Problem Count\n| summarize Total = count(), by:{timestamp = if(status == \"CLOSED\",endTime, else:currentTime),status}\n//| makeTimeseries Total = Count(), by:{status}\n| makeTimeseries ProblemCount = SUM(Total), by:{status}\n// Second Summarzation End - Summarize Closed Problem Count\n\n\n","visualization":"barChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"Total","layout":"horizontal","scale":"absolute"},"legend":{"position":"right","hidden":false},"colorPalette":"purple-rain","seriesOverrides":[{"seriesId":["CLOSED"],"override":{"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #0d9c29)","Hover":"var(--dt-colors-charts-categorical-color-09-hover, #0a7b20)","Active":"var(--dt-colors-charts-categorical-color-09-active, #075f19)","DefaultTransparent":"var(--dt-colors-charts-categorical-color-09-default-transparent, #008500cc)","HoverTransparent":"var(--dt-colors-charts-categorical-color-09-hover-transparent, #005905cc)","ActiveTransparent":"var(--dt-colors-charts-categorical-color-09-active-transparent, #003112cc)"}}},{"seriesId":["OPEN"],"override":{"color":{"Default":"var(--dt-colors-charts-vulnerability-risk-level-critical-default, #970c0c)","Hover":"var(--dt-colors-charts-vulnerability-risk-level-critical-hover, #750b0b)","Active":"var(--dt-colors-charts-vulnerability-risk-level-critical-active, #4b0707)","DefaultTransparent":"var(--dt-colors-charts-vulnerability-risk-level-critical-default-transparent, #591300cc)","HoverTransparent":"var(--dt-colors-charts-vulnerability-risk-level-critical-hover-transparent, #000c)","ActiveTransparent":"var(--dt-colors-charts-vulnerability-risk-level-critical-active-transparent, #000c)"}}}]},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["affected"]],"columnWidths":{}}}},"4":{"type":"data","title":"Total","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n//| filter (\"ALL\" == $Status OR $Status == status) \n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)// Dashboard Fitlers End\n\n// Second Summarzation Start - Sumamrize Total Problem Count\n| summarize Total = count()\n// Second Summarzation End - Summarize Total Problem Count\n","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"Total","layout":"horizontal","scale":"absolute"},"legend":{"position":"right","hidden":false},"colorPalette":"purple-rain"},"singleValue":{"showLabel":false,"label":"","prefixIcon":"","autoscale":false,"alignment":"center","sparklineSettings":{"isVisible":false}},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"5":{"type":"data","title":"Closed","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize Closed Problem Count\n| summarize Total = countIf(status == \"CLOSED\")\n// Second Summarzation End - Summarize Closed Problem Count\n","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"Total","layout":"horizontal","scale":"absolute"},"legend":{"position":"right","hidden":false},"colorPalette":"purple-rain"},"singleValue":{"showLabel":false,"label":"","prefixIcon":"CheckCircleIcon","autoscale":false,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"6":{"type":"data","title":"Open","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize Open Problems Count\n| summarize Total = countIf(status == \"ACTIVE\")\n// Second Summarzation End - Summarize Open Problems Count\n","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"Total","layout":"horizontal","scale":"absolute"},"legend":{"position":"right","hidden":false},"colorPalette":"purple-rain"},"singleValue":{"showLabel":false,"label":"","prefixIcon":"ErrorIcon","autoscale":false,"alignment":"center"},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"7":{"type":"data","title":"Closed MTTR (Minutes) ","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize Closed Problems MTTR\n| summarize  `ClosedProblemsMTTR` = avg(toDouble(problemClosedDuration))/60000000000\n// Second Summarzation End - Summarize Closed Problems MTTR","visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["Type"],"categoryAxisLabel":"","valueAxis":"Total","valueAxisLabel":"Total","layout":"horizontal","scale":"absolute"},"legend":{"position":"right","hidden":false},"colorPalette":"purple-rain"},"singleValue":{"showLabel":false,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","sparklineSettings":{"isVisible":false}},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"8":{"type":"data","title":"Closed problem MTTR (Minutes) by severity level","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false and status == \"CLOSED\"\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n| filter (\"ALL\" == $Severity OR $Severity == severityLevel)\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize Closed Problems MTTR by Severity Level\n| summarize  ClosedProblemsMTTR = avg(toDouble(problemClosedDuration))/60000000000, by:{severityLevel}\n| sort ClosedProblemsMTTR, direction:\"descending\"\n// Second Summarzation End - Summarize Closed Problems MTTR by Severity Level","visualization":"categoricalBarChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","hideLabels":false,"groupingName":""},"categoricalBarChartSettings":{"categoryAxis":["severityLevel"],"categoryAxisLabel":"","valueAxis":["ClosedProblemsMTTR"],"valueAxisLabel":"","layout":"horizontal","scale":"absolute","categoryAxisTickLayout":"horizontal"},"legend":{"hidden":true},"colorPalette":"swamps"},"singleValue":{"showLabel":false,"label":"","prefixIcon":"","autoscale":true,"alignment":"center","sparklineSettings":{"isVisible":false}},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{}}}},"9":{"type":"markdown","title":"","content":"# Example: Problem overview\nIf you want to learn more about Davis and DQL [visit our documentation](https://www.dynatrace.com/support/help/shortlink/davis-dql-examples) for more examples."}},"layouts":{"0":{"x":16,"y":6,"w":8,"h":7},"1":{"x":0,"y":13,"w":24,"h":9},"2":{"x":8,"y":6,"w":8,"h":7},"3":{"x":6,"y":2,"w":18,"h":4},"4":{"x":0,"y":2,"w":3,"h":2},"5":{"x":3,"y":4,"w":3,"h":2},"6":{"x":0,"y":4,"w":3,"h":2},"7":{"x":3,"y":2,"w":3,"h":2},"8":{"x":0,"y":6,"w":8,"h":7},"9":{"x":0,"y":0,"w":24,"h":2}}}