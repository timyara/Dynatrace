{"version":11,"variables":[{"key":"container_id","type":"query","input":"fetch logs\n| filter contains(log.source, \"/disk/docker/containers/\")\n//| filter log.source == \"/disk/docker/containers/44ef3419969f7389bced1f272ab7c5e932b050730dd50e0a583e161f6a27a7f0/44ef3419969f7389bced1f272ab7c5e932b050730dd50e0a583e161f6a27a7f0-json.log\"\n//| filter contains(content,\"exit status 1\", caseSensitive:false)\n//| filter matchesPhrase(content,\"Traceback\",caseSensitive:false)\n| fieldsAdd containerId = arrayLast(splitString(container.image.name,\"sha256:\"))\n| summarize count=count(), by:{containerId}\n| sort count desc\n| fields containerId","multiple":true},{"key":"container_name","type":"query","input":"fetch logs\n| filter contains(log.source, \"/disk/docker/containers/\")\n| fields container.name","multiple":true},{"key":"container_markdown","type":"code","input":"/*\n* This function will run in the DYNATRACE JavaScript runtime.\n* For information visit https://dt-url.net/functions-help\n*/\nimport { queryExecutionClient } from '@dynatrace-sdk/client-query';\n\nexport default async function () {\n  const timeout = 60;\n  const query = 'fetch logs | filter contains(log.source, \"/disk/docker/containers/\") | filter matchesValue(status,\"ERROR\") | fields dt.entity.container_group_instance';\n  const response = await queryExecutionClient.queryExecute({ body: { query, requestTimeoutMilliseconds: timeout * 1000, fetchTimeoutSeconds: timeout  } });\n  const jsonRecord = response[\"result\"][\"records\"][0][\"dt.entity.container_group_instance\"].toString();\n  const jsonPrefix = \"[Container Details](https://fcr78461.apps.dynatrace.com/ui/apps/dynatrace.classic.containers/ui/entity/\";\n  const jsonMarkdown = jsonPrefix.concat(jsonRecord);\n  const jsonFinalMarkdown = jsonMarkdown.concat(\")\");\n  return jsonFinalMarkdown;\n}","multiple":true},{"key":"convr_request_id","type":"query","input":"fetch logs\n| filter isNotNull(convr_request_id)\n| fields convr_request_id","multiple":true},{"key":"message","type":"query","input":"fetch logs\n| filter isNotNull(message)\n| fields message","multiple":true},{"key":"name","type":"query","input":"fetch logs\n| filter isNotNull(name)\n| fields name","multiple":true},{"key":"submission_id","type":"query","input":"fetch logs\n| filter isNotNull(submission_id)\n| fields submission_id","multiple":true}],"tiles":{"0":{"type":"data","title":"Container Names with Errors (Top 10)","query":"fetch logs\n| filter contains(log.source, \"/disk/docker/containers/\")\n| filter matchesValue(status,\"ERROR\")\n//| filter matchesPhrase(content,\"Traceback\",caseSensitive:false)\n| fieldsAdd containerId = arrayLast(splitString(container.image.name,\"sha256:\"))\n| filter in(containerId, $container_id)\n| summarize count=count(), by:{container.name, containerId}\n//| filter in(container.name, $container_name)\n//| summarize count=count(), by:{container.name}\n| sort count desc\n| limit 10","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoricalBarChartSettings":{"categoryAxis":"containerId","categoryAxisLabel":"containerId","valueAxis":"count","valueAxisLabel":"count"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["content"]],"columnWidths":{"[\"containerId\"]":331.9942932128906,"[\"count\"]":83.9914779663086,"[\"container_name\"]":151.98863220214844,"[\"container.name\"]":316.99713134765625}}}},"1":{"type":"data","title":"Container Log Events - Error Messages","query":"fetch logs\n| filter contains(log.source, \"/disk/docker/containers/\")\n| filter matchesValue(status,\"ERROR\")\n| parse content, \"JSON:j\"\n| filter isNotNull(j)\n| fieldsAdd request.level=j[levelname], request.name=j[name], request.message=j[message], request.latency=j[latency], request.url=j[request_url], request.data.company=j[request_data][company_name]\n//| filter in(container.name, $container_name)\n| summarize count=count(), by:{request.message, request.name}\n| sort count desc","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"},"categoricalBarChartSettings":{"categoryAxis":"request.message","categoryAxisLabel":"request.message","valueAxis":"count","valueAxisLabel":"count"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["container.image.name"],["dt.entity.container_group_instance"],["dt.entity.container_group"],["dt.entity.process_group_instance"],["dt.entity.host"],["dt.entity.process_group"],["dt.security_context"],["dt.source_entity"],["event.type"],["log.source"],["process.technology"],["container.id"],["log.iostream"],["status"]],"lineWrapIds":[["content"]],"columnWidths":{"[\"request.message\"]":398.9957275390625,"[\"request.name\"]":226,"[\"count\"]":83.99857330322266}}}},"2":{"type":"markdown","title":"","content":"![](https://fcr78461.apps.dynatrace.com/platform/app-engine/registry/v1/app-icons/dynatrace.classic.containers?appVersion=1.273.109+20230821-110118)"},"4":{"type":"data","title":"Memory Usage - Container Name (Top 10)","query":"timeseries series=avg(dt.containers.memory.usage_percent),by:{Container}\n| filter in(Container,$container_name)\n| sort series desc\n| limit 10","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":false,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[]},"unitsOverrides":[{"identifier":"series","base":"percentage","unit":"percent","display":null}]}},"5":{"type":"data","title":"CPU Usage - Container Name (Top 10)","query":"timeseries series=avg(dt.containers.cpu.usage_system_milli_cores),by:{Container}\n| filter in(Container,$container_name)\n| sort series desc\n| limit 10","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":false,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[]}}},"6":{"type":"data","title":"Container Log Events - All Errors","query":"fetch logs, scanLimitGBytes: -1, samplingRatio: 1, from: now()-30d\n| filter contains(log.source, \"/disk/docker/containers/\")\n| filter matchesValue(status,\"ERROR\")\n//| filter contains(content,\"exit status\", caseSensitive:false)\n//| filter matchesPhrase(content,\"Traceback\",caseSensitive:false)\n//| fieldsAdd containerId = arrayLast(splitString(container.image.name,\"sha256:\"))\n//| filter in(containerId, $container_id)\n//| summarize count=count(), by:{containerId}\n//| filter in(container.name, $container_name)\n//| fieldsAdd containerLink=concat(\"https://fcr78461.live.dynatrace.com/ui/entity/\",dt.entity.container_group_instance)\n| sort timestamp desc\n//| fields timestamp, content, container.name, host.name \n//| filter content == \"{\\\"asctime\\\": \\\"2023-08-30 15:19:02,739\\\", \\\"levelname\\\": \\\"ERROR\\\", \\\"name\\\": \\\"d3.app\\\", \\\"message\\\": \\\"latency for company search exceeded max allowed\\\", \\\"latency\\\": 2526, \\\"request_url\\\": \\\"https://demo.convr.io/api/companies\\\", \\\"request_data\\\": {\\\"company_name\\\": \\\"PINE GROVE HOSE, HOOK\\\", \\\"street_addr1\\\": \\\"PO BOX 276\\\", \\\"street_addr2\\\": \\\"\\\", \\\"state\\\": \\\"PA\\\", \\\"city\\\": \\\"PINE GROVE\\\", \\\"zip\\\": \\\"179630276\\\"}, \\\"convr_request_id\\\": \\\"e42eb9e8-7bd0-4230-94d0-370783f92a2e\\\"}\"","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["container.image.name"],["dt.entity.container_group_instance"],["dt.entity.container_group"],["dt.entity.process_group_instance"],["dt.entity.host"],["dt.entity.process_group"],["dt.security_context"],["dt.source_entity"],["event.type"],["log.source"],["process.technology"],["container.id"],["log.iostream"],["status"],["http.host"],["http.flavor"],["http.target"],["net.host.name"],["http.method"],["dt.process.name"],["dt.ingest.warnings"],["dt.host_group.id"],["dt.entity.host_group"],["net.peer.ip"],["process.pid"],["trace_sampled"],["json_content"],["j"]],"lineWrapIds":[["content"]],"columnWidths":{"[\"timestamp\"]":171.71875,"[\"content\"]":600,"[\"container.name\"]":349.8707275390625,"[\"dt.ingest.warnings\"]":189.1051025390625,"[\"dt.process.name\"]":153.4161834716797,"[\"host.name\"]":137.58522033691406,"[\"loglevel\"]":97.6491470336914,"[\"convr_request_id\"]":282.87640380859375,"[\"json_content\"]":600,"[\"level_name\"]":122.15198516845703,"[\"message\"]":168.86363220214844,"[\"name\"]":168.90625,"[\"dt.entity.host_group\"]":233.12498474121094,"[\"dt.host_group.id\"]":152.74147033691406,"[\"http.method\"]":127.12357330322266,"[\"net.host.name\"]":140.08522033691406,"[\"http.target\"]":117.64204406738281,"[\"net.peer.ip\"]":115.29119110107422,"[\"process.pid\"]":120.10652923583984,"[\"span_id\"]":133.16050720214844,"[\"trace_id\"]":254.6377716064453,"[\"trace_sampled\"]":143.60084533691406,"[\"j\"]":51.818180084228516,"[\"mvp_hdp_message\"]":172.11647033691406,"[\"validation_failed_message\"]":220.31959533691406,"[\"dt.http.request.header.referer\"]":239.2471466064453,"[\"container.image.name\"]":null,"[\"dt.entity.container_group\"]":null,"[\"dt.entity.container_group_instance\"]":null,"[\"dt.entity.host\"]":null,"[\"dt.entity.process_group\"]":null,"[\"dt.entity.process_group_instance\"]":null,"[\"dt.security_context\"]":null,"[\"dt.source_entity\"]":null,"[\"event.type\"]":null,"[\"log.source\"]":null,"[\"process.technology\"]":null,"[\"status\"]":null,"[\"container.id\"]":null,"[\"log.iostream\"]":null,"[\"http.flavor\"]":null,"[\"http.host\"]":null}}}},"7":{"type":"markdown","title":"","content":" $container_markdown"},"9":{"type":"markdown","title":"","content":"####  [Container Analytics Notebook](https://fcr78461.apps.dynatrace.com/ui/apps/dynatrace.notebooks/notebook/88d4bac7-ca86-41d4-8fb0-f7e23dc4074e#ff405039-596d-45f9-8b9a-23ee305d65d3)\n"},"10":{"type":"data","title":"Container_name: CPU/Memory for Containers + container lifetime","query":"//STARTED (AG0) = Lifetime of container_name\n\ntimeseries {\n  `Memory %` = avg(dt.containers.memory.usage_percent),\n  `TOTAL CPU %`= avg(dt.containers.cpu.usage_percent),\n  `RSS MEMORY` = avg(dt.containers.memory.resident_set_bytes)\n  },\n\n//timeframe is 7 minutes \n  by:{Container},from:-10m\n| lookup [fetch dt.entity.container_group_instance\n| fields entity.name,id,lifetime, lifetime[end], containerNames\n| expand containerNames\n| fieldsAdd started=toDuration(lifetime), status = toTimestamp(now())-lifetime[end] ],sourceField:Container, lookupField:containerNames, fields:{started,status }\n| fieldsAdd status = if(status < 5m, \"🟢 UP \", else: \"🔴 DOWN\")\n| fields NAME = Container,STATUS = status, `TOTAL CPU %`=arrayAvg(`TOTAL CPU %`),`RSS MEMORY` = arrayAvg(`RSS MEMORY`), `Memory %` = arrayAvg(`Memory %`), `STARTED (AG0)`= started\n| filterOut NAME == \"\" or isNull(`STARTED (AG0)`)\n//| sort STATUS asc\n| sort `STARTED (AG0)` desc","davis":{"enabled":false},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":"NAME","categoryAxisLabel":"NAME","valueAxis":"TOTAL CPU %","valueAxisLabel":"TOTAL CPU %"}},"singleValue":{"showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{"[\"Container\"]":596.953125,"[\"cpu\"]":70.796875,"[\"memory\"]":100.828125,"[\"started\"]":115.125}}}}},"layouts":{"0":{"x":0,"y":6,"w":11,"h":8},"1":{"x":0,"y":22,"w":11,"h":4},"2":{"x":0,"y":0,"w":3,"h":4},"4":{"x":3,"y":0,"w":11,"h":6},"5":{"x":14,"y":0,"w":10,"h":6},"6":{"x":0,"y":14,"w":24,"h":8},"7":{"x":0,"y":4,"w":3,"h":1},"9":{"x":0,"y":5,"w":3,"h":1},"10":{"x":11,"y":6,"w":13,"h":8}},"refreshRate":0}